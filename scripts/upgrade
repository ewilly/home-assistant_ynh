#!/bin/bash

set -eu
source _common.sh
source /usr/share/yunohost/helpers

# manage script failure
ynh_abort_if_errors

# retrieve arguments
app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get $app domain)
port=$(ynh_app_setting_get $app port)
port_configurator=$(ynh_app_setting_get $app port_configurator)

# definie useful vars
final_path="/srv/$app"
data_path="/home/$app/.$app"

# use prior backup and restore on error only if backup feature exists on installed instance
if [ -f "/etc/yunohost/apps/$app/scripts/backup" ] ; then
  ynh_backup_before_upgrade # Backup the current version of the app
  ynh_clean_setup () {
      ynh_restore_upgradebackup
  }
fi

# add required packages
ynh_install_app_dependencies "$PKG_DEPENDENCIES"

# stop systemd service
## for Home Assistant
systemctl stop "$app@$app.service"
systemctl disable "$app@$app.service"
## for Home Assistant configurator
systemctl stop "$app-configurator@$app.service"
systemctl disable "$app-configurator@$app.service"
systemctl --system daemon-reload

# retrieve upstream version
source ../conf/app.src
ynh_app_setting_set $app ha_version $UPSTREAM_HA_VERSION
ynh_app_setting_set $app configurator_version $UPSTREAM_CONFIGURATOR_VERSION

# upgrade
## for Home Assistant
exec_as "$app" -H -s /bin/bash -c " \
	echo 'create the virtual environment' \
		&& python3 -m venv $final_path \
	&& echo 'activate the virtual environment' \
		&& source $final_path/bin/activate \
	&& echo 'install a required python package' \
		&& python3 -m pip install --upgrade wheel \
	&& echo 'install Home Assistant' \
		&& pip3 install --upgrade $app==$UPSTREAM_HA_VERSION \
	"
## for Home Assistant configurator
wget https://raw.githubusercontent.com/danielperna84/hass-configurator/$UPSTREAM_CONFIGURATOR_VERSION/configurator.py -O "$data_path/configurator.py"
chown $app: "$data_path/configurator.py"
chmod 755 "$data_path/configurator.py"

# setup up autostart using systemd
## for Home Assistant
ynh_replace_string "__PORT__" "$port" "../conf/$app.service"
cp "../conf/$app.service" "/etc/systemd/system/$app@$app.service"
## for Home Assistant configurator
ynh_replace_string "__PORT-CONFIGURATOR__" "$port_configurator" "../conf/$app-configurator.service"
cp "../conf/$app-configurator.service" "/etc/systemd/system/$app-configurator@$app.service"

# enable & restart systemd service
systemctl --system daemon-reload
## for Home Assistant
systemctl enable "$app@$app.service"
systemctl restart "$app@$app.service"
## for Home Assistant configurator
systemctl enable "$app-configurator@$app.service"
systemctl restart "$app-configurator@$app.service"

# create a dedicated nginx config
## for Home Assistant configurator (before because ynh_add_nginx_config reload nginx and give an error due to __PORT-CONFIGURATOR__)
ynh_replace_string "__PORT-CONFIGURATOR__" "$port_configurator" "../conf/nginx.conf"
## for Home Assistant
ynh_add_nginx_config

# reload nginx
systemctl reload nginx
